//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProductsApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HRInnova_QAEntities : DbContext
    {
        public HRInnova_QAEntities()
            : base("name=HRInnova_QAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccumActionType> AccumActionTypes { get; set; }
        public virtual DbSet<ActionPlan> ActionPlans { get; set; }
        public virtual DbSet<AppConfig> AppConfigs { get; set; }
        public virtual DbSet<AppNotification> AppNotifications { get; set; }
        public virtual DbSet<AppraisalParameter> AppraisalParameters { get; set; }
        public virtual DbSet<AppraisalParameterRoleRelation> AppraisalParameterRoleRelations { get; set; }
        public virtual DbSet<ApprovalType> ApprovalTypes { get; set; }
        public virtual DbSet<AttendanceAPIUser> AttendanceAPIUsers { get; set; }
        public virtual DbSet<AttendanceReportDepartmentLookup> AttendanceReportDepartmentLookups { get; set; }
        public virtual DbSet<AttendanceReprotParameter> AttendanceReprotParameters { get; set; }
        public virtual DbSet<Audit_Projman> Audit_Projman { get; set; }
        public virtual DbSet<AuditLog> AuditLogs { get; set; }
        public virtual DbSet<BankMaster> BankMasters { get; set; }
        public virtual DbSet<BirthdayCount> BirthdayCounts { get; set; }
        public virtual DbSet<BUMaster> BUMasters { get; set; }
        public virtual DbSet<BusinessAgreement> BusinessAgreements { get; set; }
        public virtual DbSet<ChangeRequest> ChangeRequests { get; set; }
        public virtual DbSet<ChangeRequestPaymentMilestone> ChangeRequestPaymentMilestones { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<clientcontact> clientcontacts { get; set; }
        public virtual DbSet<ColumnsMaster> ColumnsMasters { get; set; }
        public virtual DbSet<ColumnsMaster_NewReport> ColumnsMaster_NewReport { get; set; }
        public virtual DbSet<company> companies { get; set; }
        public virtual DbSet<ConferenceRoomEquipmentDetail> ConferenceRoomEquipmentDetails { get; set; }
        public virtual DbSet<ConferenceRoomMaster> ConferenceRoomMasters { get; set; }
        public virtual DbSet<Configuration> Configurations { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CurrencyDefinition> CurrencyDefinitions { get; set; }
        public virtual DbSet<CycleType> CycleTypes { get; set; }
        public virtual DbSet<DashBoardDetail> DashBoardDetails { get; set; }
        public virtual DbSet<DashBoardEmpLookUp> DashBoardEmpLookUps { get; set; }
        public virtual DbSet<DashBoardRole> DashBoardRoles { get; set; }
        public virtual DbSet<DashBoardType> DashBoardTypes { get; set; }
        public virtual DbSet<dataentry> dataentries { get; set; }
        public virtual DbSet<DataEntryRejectionHistory> DataEntryRejectionHistories { get; set; }
        public virtual DbSet<degree> degrees { get; set; }
        public virtual DbSet<department> departments { get; set; }
        public virtual DbSet<Doc> Docs { get; set; }
        public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        public virtual DbSet<domain> domains { get; set; }
        public virtual DbSet<EligibilityType> EligibilityTypes { get; set; }
        public virtual DbSet<ELMAH_Error> ELMAH_Error { get; set; }
        public virtual DbSet<EmailData> EmailDatas { get; set; }
        public virtual DbSet<EmpADPasswordResetBlock> EmpADPasswordResetBlocks { get; set; }
        public virtual DbSet<EmpGrossSalary> EmpGrossSalaries { get; set; }
        public virtual DbSet<emphourlyavg> emphourlyavgs { get; set; }
        public virtual DbSet<employee> employees { get; set; }
        public virtual DbSet<EmployeeAppraisal> EmployeeAppraisals { get; set; }
        public virtual DbSet<EmployeeAttachment> EmployeeAttachments { get; set; }
        public virtual DbSet<EmployeeColumnsReportMapping> EmployeeColumnsReportMappings { get; set; }
        public virtual DbSet<EmployeeColumnsReportMapping_NewReport> EmployeeColumnsReportMapping_NewReport { get; set; }
        public virtual DbSet<EmployeeCompetencyDetail> EmployeeCompetencyDetails { get; set; }
        public virtual DbSet<EmployeeDetail> EmployeeDetails { get; set; }
        public virtual DbSet<EmployeeDetailReplica> EmployeeDetailReplicas { get; set; }
        public virtual DbSet<EmployeeDeviceMapping> EmployeeDeviceMappings { get; set; }
        public virtual DbSet<employeedomainlookup> employeedomainlookups { get; set; }
        public virtual DbSet<EmployeeDomainLookupReplica> EmployeeDomainLookupReplicas { get; set; }
        public virtual DbSet<EmployeeEncashMaster> EmployeeEncashMasters { get; set; }
        public virtual DbSet<EmployeeHistory> EmployeeHistories { get; set; }
        public virtual DbSet<EmployeeHoliday> EmployeeHolidays { get; set; }
        public virtual DbSet<EmployeeIncrement> EmployeeIncrements { get; set; }
        public virtual DbSet<EmployeeInOutTemp> EmployeeInOutTemps { get; set; }
        public virtual DbSet<EmployeeLanguageDetail> EmployeeLanguageDetails { get; set; }
        public virtual DbSet<EmployeeLanguageDetailReplica> EmployeeLanguageDetailReplicas { get; set; }
        public virtual DbSet<EmployeeLeaveMaster> EmployeeLeaveMasters { get; set; }
        public virtual DbSet<EmployeeLeaveTransaction> EmployeeLeaveTransactions { get; set; }
        public virtual DbSet<EmployeeMarketingUpdateLookup> EmployeeMarketingUpdateLookups { get; set; }
        public virtual DbSet<EmployeeModuleLookup> EmployeeModuleLookups { get; set; }
        public virtual DbSet<EmployeePLBalanceDetail> EmployeePLBalanceDetails { get; set; }
        public virtual DbSet<EmployeePreviousCompany> EmployeePreviousCompanies { get; set; }
        public virtual DbSet<EmployeePreviousCompanyReplica> EmployeePreviousCompanyReplicas { get; set; }
        public virtual DbSet<EmployeeQualification> EmployeeQualifications { get; set; }
        public virtual DbSet<EmployeeQualificationReplica> EmployeeQualificationReplicas { get; set; }
        public virtual DbSet<employeeReplica> employeeReplicas { get; set; }
        public virtual DbSet<EmployeeSkill> EmployeeSkills { get; set; }
        public virtual DbSet<EmployeeSkillDetail> EmployeeSkillDetails { get; set; }
        public virtual DbSet<employeestatu> employeestatus { get; set; }
        public virtual DbSet<employeetechnologylookup> employeetechnologylookups { get; set; }
        public virtual DbSet<EmployeeVisaDetail> EmployeeVisaDetails { get; set; }
        public virtual DbSet<EmployeeVisaDetailReplica> EmployeeVisaDetailReplicas { get; set; }
        public virtual DbSet<EmployeeWorkingHoursTemp> EmployeeWorkingHoursTemps { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<EvaluationNote> EvaluationNotes { get; set; }
        public virtual DbSet<ExtentType> ExtentTypes { get; set; }
        public virtual DbSet<ExternalTrainerDetail> ExternalTrainerDetails { get; set; }
        public virtual DbSet<Failure> Failures { get; set; }
        public virtual DbSet<favoriteworkevent> favoriteworkevents { get; set; }
        public virtual DbSet<file> files { get; set; }
        public virtual DbSet<HardwareType> HardwareTypes { get; set; }
        public virtual DbSet<Holiday> Holidays { get; set; }
        public virtual DbSet<HolidayDate_Op1> HolidayDate_Op1 { get; set; }
        public virtual DbSet<HolidayDate_Op2> HolidayDate_Op2 { get; set; }
        public virtual DbSet<HolidayEmployeeMapping> HolidayEmployeeMappings { get; set; }
        public virtual DbSet<HolidayList> HolidayLists { get; set; }
        public virtual DbSet<HolidayListMapping> HolidayListMappings { get; set; }
        public virtual DbSet<HolidayMapping> HolidayMappings { get; set; }
        public virtual DbSet<HoursHistory> HoursHistories { get; set; }
        public virtual DbSet<ImpactAnalysi> ImpactAnalysis { get; set; }
        public virtual DbSet<Industry> Industries { get; set; }
        public virtual DbSet<InVoice> InVoices { get; set; }
        public virtual DbSet<Invoice_HourlyPayment> Invoice_HourlyPayment { get; set; }
        public virtual DbSet<Invoices_Project> Invoices_Project { get; set; }
        public virtual DbSet<JobOffer> JobOffers { get; set; }
        public virtual DbSet<KRAEvaluation> KRAEvaluations { get; set; }
        public virtual DbSet<LeaveAcceptType> LeaveAcceptTypes { get; set; }
        public virtual DbSet<leaveBalanceMaster> leaveBalanceMasters { get; set; }
        public virtual DbSet<LeaveCategory> LeaveCategories { get; set; }
        public virtual DbSet<LeaveCode> LeaveCodes { get; set; }
        public virtual DbSet<LogTable> LogTables { get; set; }
        public virtual DbSet<Lookup> Lookups { get; set; }
        public virtual DbSet<LookupType> LookupTypes { get; set; }
        public virtual DbSet<MatrixDeviceInfoDetail> MatrixDeviceInfoDetails { get; set; }
        public virtual DbSet<MatrixDeviceInfoMaster> MatrixDeviceInfoMasters { get; set; }
        public virtual DbSet<MatrixInterOfficePunch> MatrixInterOfficePunches { get; set; }
        public virtual DbSet<milestone> milestones { get; set; }
        public virtual DbSet<Module> Modules { get; set; }
        public virtual DbSet<ModuleCatagory> ModuleCatagories { get; set; }
        public virtual DbSet<Penalty> Penalties { get; set; }
        public virtual DbSet<PenaltyCalculationLog> PenaltyCalculationLogs { get; set; }
        public virtual DbSet<PenaltyConfig> PenaltyConfigs { get; set; }
        public virtual DbSet<PenaltyConfigType> PenaltyConfigTypes { get; set; }
        public virtual DbSet<PenaltyEmployeeMapping> PenaltyEmployeeMappings { get; set; }
        public virtual DbSet<PenaltyType> PenaltyTypes { get; set; }
        public virtual DbSet<Pickup> Pickups { get; set; }
        public virtual DbSet<PMSCustomScreen> PMSCustomScreens { get; set; }
        public virtual DbSet<PMSEvent> PMSEvents { get; set; }
        public virtual DbSet<PMSEventType> PMSEventTypes { get; set; }
        public virtual DbSet<PMSRelease> PMSReleases { get; set; }
        public virtual DbSet<PMSWorkflow> PMSWorkflows { get; set; }
        public virtual DbSet<PMSWorkflowTransition> PMSWorkflowTransitions { get; set; }
        public virtual DbSet<PMSWorkflowTransitionData> PMSWorkflowTransitionDatas { get; set; }
        public virtual DbSet<PMSWorkflowWorkItemMapping> PMSWorkflowWorkItemMappings { get; set; }
        public virtual DbSet<Policy> Policies { get; set; }
        public virtual DbSet<PolicyEligibilityMapping> PolicyEligibilityMappings { get; set; }
        public virtual DbSet<PolicyLeaveMapping> PolicyLeaveMappings { get; set; }
        public virtual DbSet<PolicyShiftMapping> PolicyShiftMappings { get; set; }
        public virtual DbSet<PolicyWorkTimeMapping> PolicyWorkTimeMappings { get; set; }
        public virtual DbSet<PolicyWorkWeekMapping> PolicyWorkWeekMappings { get; set; }
        public virtual DbSet<PrivilegeRole> PrivilegeRoles { get; set; }
        public virtual DbSet<PrivilegeRoleModuleLookup> PrivilegeRoleModuleLookups { get; set; }
        public virtual DbSet<project> projects { get; set; }
        public virtual DbSet<ProjectConfigMapping> ProjectConfigMappings { get; set; }
        public virtual DbSet<ProjectConfigType> ProjectConfigTypes { get; set; }
        public virtual DbSet<projectinitiation> projectinitiations { get; set; }
        public virtual DbSet<ProjectInitiationPaymentMilestone> ProjectInitiationPaymentMilestones { get; set; }
        public virtual DbSet<ProjectInitiationResource> ProjectInitiationResources { get; set; }
        public virtual DbSet<ProjectInitiationResourcesHistory> ProjectInitiationResourcesHistories { get; set; }
        public virtual DbSet<projectmode> projectmodes { get; set; }
        public virtual DbSet<ProjectPriority> ProjectPriorities { get; set; }
        public virtual DbSet<ProjectSprint> ProjectSprints { get; set; }
        public virtual DbSet<projectstatu> projectstatus { get; set; }
        public virtual DbSet<projectsubtype> projectsubtypes { get; set; }
        public virtual DbSet<ProjectTechnologyLookup> ProjectTechnologyLookups { get; set; }
        public virtual DbSet<projecttype> projecttypes { get; set; }
        public virtual DbSet<Receipt> Receipts { get; set; }
        public virtual DbSet<ReviewDefect> ReviewDefects { get; set; }
        public virtual DbSet<Risk> Risks { get; set; }
        public virtual DbSet<role> roles { get; set; }
        public virtual DbSet<SalaryTypeMaster> SalaryTypeMasters { get; set; }
        public virtual DbSet<SandwichLeaveType> SandwichLeaveTypes { get; set; }
        public virtual DbSet<ScheduleJobSetting> ScheduleJobSettings { get; set; }
        public virtual DbSet<Sent> Sents { get; set; }
        public virtual DbSet<Shift> Shifts { get; set; }
        public virtual DbSet<ShiftType> ShiftTypes { get; set; }
        public virtual DbSet<SoftwareAssetsLink> SoftwareAssetsLinks { get; set; }
        public virtual DbSet<Standard> Standards { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<task> tasks { get; set; }
        public virtual DbSet<tblActionStepsforMeeting> tblActionStepsforMeetings { get; set; }
        public virtual DbSet<tblActivityDetail> tblActivityDetails { get; set; }
        public virtual DbSet<tblActivityType> tblActivityTypes { get; set; }
        public virtual DbSet<tblAnswerOption> tblAnswerOptions { get; set; }
        public virtual DbSet<tblApprovalStatu> tblApprovalStatus { get; set; }
        public virtual DbSet<tblArea> tblAreas { get; set; }
        public virtual DbSet<tblAttendanceException> tblAttendanceExceptions { get; set; }
        public virtual DbSet<tblAttendanceExceptionDepartmentLookup> tblAttendanceExceptionDepartmentLookups { get; set; }
        public virtual DbSet<tblAttendanceExceptionEmployeeLookup> tblAttendanceExceptionEmployeeLookups { get; set; }
        public virtual DbSet<tblAttendanceReport> tblAttendanceReports { get; set; }
        public virtual DbSet<tblAttendanceReportPLBalance> tblAttendanceReportPLBalances { get; set; }
        public virtual DbSet<tblAuditLogDetail> tblAuditLogDetails { get; set; }
        public virtual DbSet<tblAuditLogTable> tblAuditLogTables { get; set; }
        public virtual DbSet<tblAuditLogTableColumn> tblAuditLogTableColumns { get; set; }
        public virtual DbSet<tblBillingPeriodMaster> tblBillingPeriodMasters { get; set; }
        public virtual DbSet<tblBranch> tblBranches { get; set; }
        public virtual DbSet<tblChangeRequestMaster> tblChangeRequestMasters { get; set; }
        public virtual DbSet<tblCIMSBackgroundImage> tblCIMSBackgroundImages { get; set; }
        public virtual DbSet<tblCommentType> tblCommentTypes { get; set; }
        public virtual DbSet<tblCompetencyRating> tblCompetencyRatings { get; set; }
        public virtual DbSet<tblCRDocument> tblCRDocuments { get; set; }
        public virtual DbSet<tblEmployeeInOut> tblEmployeeInOuts { get; set; }
        public virtual DbSet<tblEmployeeReferralBonu> tblEmployeeReferralBonus { get; set; }
        public virtual DbSet<tblEmployeeSchedule> tblEmployeeSchedules { get; set; }
        public virtual DbSet<tblEmployeeWbsLookup> tblEmployeeWbsLookups { get; set; }
        public virtual DbSet<tblEmpPasswordLookUp> tblEmpPasswordLookUps { get; set; }
        public virtual DbSet<tblEmpPasswordTrack> tblEmpPasswordTracks { get; set; }
        public virtual DbSet<tblErrorLog> tblErrorLogs { get; set; }
        public virtual DbSet<tblEvaluationComment> tblEvaluationComments { get; set; }
        public virtual DbSet<tblEvalutionFrequency> tblEvalutionFrequencies { get; set; }
        public virtual DbSet<tblEvalutionParam> tblEvalutionParams { get; set; }
        public virtual DbSet<tblExternalTaskTimesheetImportMapping> tblExternalTaskTimesheetImportMappings { get; set; }
        public virtual DbSet<tblFunction> tblFunctions { get; set; }
        public virtual DbSet<tblGoToMarketMaster> tblGoToMarketMasters { get; set; }
        public virtual DbSet<tblGuideline> tblGuidelines { get; set; }
        public virtual DbSet<tblInOutAdjustment> tblInOutAdjustments { get; set; }
        public virtual DbSet<tblInOutType> tblInOutTypes { get; set; }
        public virtual DbSet<tblIterationHistory> tblIterationHistories { get; set; }
        public virtual DbSet<tblJustification> tblJustifications { get; set; }
        public virtual DbSet<tblKPI> tblKPIs { get; set; }
        public virtual DbSet<tblKPIFunction> tblKPIFunctions { get; set; }
        public virtual DbSet<tblKPIGuideline> tblKPIGuidelines { get; set; }
        public virtual DbSet<tblKpiNote> tblKpiNotes { get; set; }
        public virtual DbSet<tblKPI1> tblKPIs1 { get; set; }
        public virtual DbSet<tblKRAAssign> tblKRAAssigns { get; set; }
        public virtual DbSet<tblKRAAssignDetail> tblKRAAssignDetails { get; set; }
        public virtual DbSet<tblKRAAssignDetailEVlParam> tblKRAAssignDetailEVlParams { get; set; }
        public virtual DbSet<tblKRAAssignDetailKPI> tblKRAAssignDetailKPIs { get; set; }
        public virtual DbSet<tblKRAAssignDevelopmentPlan> tblKRAAssignDevelopmentPlans { get; set; }
        public virtual DbSet<tblKRAAssignEvaluationDate> tblKRAAssignEvaluationDates { get; set; }
        public virtual DbSet<tblKRACommentMeta> tblKRACommentMetas { get; set; }
        public virtual DbSet<tblKRACommentTransection> tblKRACommentTransections { get; set; }
        public virtual DbSet<tblKRADevelopmentPlan> tblKRADevelopmentPlans { get; set; }
        public virtual DbSet<tblKRADevelopmentType> tblKRADevelopmentTypes { get; set; }
        public virtual DbSet<tblKRAEVLPrdSetting> tblKRAEVLPrdSettings { get; set; }
        public virtual DbSet<tblKRAEVLPRM_Relation> tblKRAEVLPRM_Relation { get; set; }
        public virtual DbSet<tblKRAKPI_Relation> tblKRAKPI_Relation { get; set; }
        public virtual DbSet<tblKRAKPI> tblKRAKPIs { get; set; }
        public virtual DbSet<tblKRAMaster> tblKRAMasters { get; set; }
        public virtual DbSet<tblKRA> tblKRAs { get; set; }
        public virtual DbSet<tblKRAScore> tblKRAScores { get; set; }
        public virtual DbSet<tblKRASetting> tblKRASettings { get; set; }
        public virtual DbSet<tblKRASkill_Type> tblKRASkill_Type { get; set; }
        public virtual DbSet<tblKRAStatu> tblKRAStatus { get; set; }
        public virtual DbSet<tblKRATempDetail> tblKRATempDetails { get; set; }
        public virtual DbSet<tblKRATempDetailEVLParam> tblKRATempDetailEVLParams { get; set; }
        public virtual DbSet<tblKRATempDetailKPI> tblKRATempDetailKPIs { get; set; }
        public virtual DbSet<tblKRATemplate> tblKRATemplates { get; set; }
        public virtual DbSet<tblLink> tblLinks { get; set; }
        public virtual DbSet<tblLocation> tblLocations { get; set; }
        public virtual DbSet<tblNotification> tblNotifications { get; set; }
        public virtual DbSet<tblNotificationUser> tblNotificationUsers { get; set; }
        public virtual DbSet<tblObjectiveKRA> tblObjectiveKRAs { get; set; }
        public virtual DbSet<tblObjective> tblObjectives { get; set; }
        public virtual DbSet<tblOrgBandMaster> tblOrgBandMasters { get; set; }
        public virtual DbSet<tblOrgLevelBandTiersLookup> tblOrgLevelBandTiersLookups { get; set; }
        public virtual DbSet<tblOrgLevelMaster> tblOrgLevelMasters { get; set; }
        public virtual DbSet<tblOrgTiersMaster> tblOrgTiersMasters { get; set; }
        public virtual DbSet<tblPageTracker> tblPageTrackers { get; set; }
        public virtual DbSet<tblPageTrackingSummary> tblPageTrackingSummaries { get; set; }
        public virtual DbSet<tblPINApprovalStatu> tblPINApprovalStatus { get; set; }
        public virtual DbSet<tblPINAuthorityTypeMaster> tblPINAuthorityTypeMasters { get; set; }
        public virtual DbSet<tblPINComment> tblPINComments { get; set; }
        public virtual DbSet<tblPINConfigDetail> tblPINConfigDetails { get; set; }
        public virtual DbSet<tblPINConfiguration> tblPINConfigurations { get; set; }
        public virtual DbSet<tblPINDocument> tblPINDocuments { get; set; }
        public virtual DbSet<tblPINDocumentTypeMaster> tblPINDocumentTypeMasters { get; set; }
        public virtual DbSet<tblPINLevelMaster> tblPINLevelMasters { get; set; }
        public virtual DbSet<tblPINOpportunitiesMaster> tblPINOpportunitiesMasters { get; set; }
        public virtual DbSet<tblPINPriorityMaster> tblPINPriorityMasters { get; set; }
        public virtual DbSet<tblPrimaryRegionMaster> tblPrimaryRegionMasters { get; set; }
        public virtual DbSet<tblProcess> tblProcesses { get; set; }
        public virtual DbSet<tblProfileRejectionHistory> tblProfileRejectionHistories { get; set; }
        public virtual DbSet<tblProjectInitiationLookup> tblProjectInitiationLookups { get; set; }
        public virtual DbSet<tblProjectMeeting> tblProjectMeetings { get; set; }
        public virtual DbSet<tblProjectMeetingComment> tblProjectMeetingComments { get; set; }
        public virtual DbSet<tblProjectStatusAnswer> tblProjectStatusAnswers { get; set; }
        public virtual DbSet<tblProjectStatusQuestion> tblProjectStatusQuestions { get; set; }
        public virtual DbSet<TblProjectTemplate> TblProjectTemplates { get; set; }
        public virtual DbSet<tblQuestionCategory> tblQuestionCategories { get; set; }
        public virtual DbSet<TblRequestFieldLookUp> TblRequestFieldLookUps { get; set; }
        public virtual DbSet<TblRequestFieldMaster> TblRequestFieldMasters { get; set; }
        public virtual DbSet<tblSalesChannelMaster> tblSalesChannelMasters { get; set; }
        public virtual DbSet<tblSchedule> tblSchedules { get; set; }
        public virtual DbSet<tblScheduleTime> tblScheduleTimes { get; set; }
        public virtual DbSet<tblSecondaryRegionMaster> tblSecondaryRegionMasters { get; set; }
        public virtual DbSet<tblServiceOfferingMaster> tblServiceOfferingMasters { get; set; }
        public virtual DbSet<tblSetTemplate> tblSetTemplates { get; set; }
        public virtual DbSet<tblSkillMatrixSpanMaster> tblSkillMatrixSpanMasters { get; set; }
        public virtual DbSet<tblSkillRating> tblSkillRatings { get; set; }
        public virtual DbSet<tblSubContractorMaster> tblSubContractorMasters { get; set; }
        public virtual DbSet<tblSuggestion> tblSuggestions { get; set; }
        public virtual DbSet<TblTagMaster> TblTagMasters { get; set; }
        public virtual DbSet<tblTaskComment> tblTaskComments { get; set; }
        public virtual DbSet<tblTaskRemainingHourDetail> tblTaskRemainingHourDetails { get; set; }
        public virtual DbSet<tblTaskStatu> tblTaskStatus { get; set; }
        public virtual DbSet<TblTaskType> TblTaskTypes { get; set; }
        public virtual DbSet<tblTeamMemberKraEvalution> tblTeamMemberKraEvalutions { get; set; }
        public virtual DbSet<tblTeamMemberKraNote> tblTeamMemberKraNotes { get; set; }
        public virtual DbSet<tblTempPunchData_SinglePunch_Day> tblTempPunchData_SinglePunch_Day { get; set; }
        public virtual DbSet<tblTrainingFeedBackAnswer> tblTrainingFeedBackAnswers { get; set; }
        public virtual DbSet<tblTrainingFeedBackMaster> tblTrainingFeedBackMasters { get; set; }
        public virtual DbSet<tblTrainingFeedbackQuestion> tblTrainingFeedbackQuestions { get; set; }
        public virtual DbSet<tblTrainingNomination> tblTrainingNominations { get; set; }
        public virtual DbSet<tblTrainingWaiverDetail> tblTrainingWaiverDetails { get; set; }
        public virtual DbSet<tblTrainingWaiverMaster> tblTrainingWaiverMasters { get; set; }
        public virtual DbSet<tblVisitedPageDetail> tblVisitedPageDetails { get; set; }
        public virtual DbSet<TeamMember> TeamMembers { get; set; }
        public virtual DbSet<TeamMembersKRA> TeamMembersKRAs { get; set; }
        public virtual DbSet<technology> technologies { get; set; }
        public virtual DbSet<technologytype> technologytypes { get; set; }
        public virtual DbSet<TempHolidayDate> TempHolidayDates { get; set; }
        public virtual DbSet<TempHolidayDates_Modify> TempHolidayDates_Modify { get; set; }
        public virtual DbSet<Template> Templates { get; set; }
        public virtual DbSet<timeoffrequest> timeoffrequests { get; set; }
        public virtual DbSet<timeoffrequest_LOG> timeoffrequest_LOG { get; set; }
        public virtual DbSet<timeoffrequest_temp> timeoffrequest_temp { get; set; }
        public virtual DbSet<TimeOffRequestClone> TimeOffRequestClones { get; set; }
        public virtual DbSet<TimeoffRequestDateLookUp> TimeoffRequestDateLookUps { get; set; }
        public virtual DbSet<TimesheetConfiguration> TimesheetConfigurations { get; set; }
        public virtual DbSet<TraineeDetail> TraineeDetails { get; set; }
        public virtual DbSet<TrainerDetail> TrainerDetails { get; set; }
        public virtual DbSet<TrainingCategory> TrainingCategories { get; set; }
        public virtual DbSet<TrainingDetail> TrainingDetails { get; set; }
        public virtual DbSet<TrainingDetailsLog> TrainingDetailsLogs { get; set; }
        public virtual DbSet<TrainingEmployeeLog> TrainingEmployeeLogs { get; set; }
        public virtual DbSet<TrainingEquipmentDetail> TrainingEquipmentDetails { get; set; }
        public virtual DbSet<TrainingEvaluation> TrainingEvaluations { get; set; }
        public virtual DbSet<TrainingMaster> TrainingMasters { get; set; }
        public virtual DbSet<TrainingMasterLog> TrainingMasterLogs { get; set; }
        public virtual DbSet<TrainingObjective> TrainingObjectives { get; set; }
        public virtual DbSet<vulnerability> vulnerabilities { get; set; }
        public virtual DbSet<WB> WBS { get; set; }
        public virtual DbSet<WBSEmpLink> WBSEmpLinks { get; set; }
        public virtual DbSet<WBSFile> WBSFiles { get; set; }
        public virtual DbSet<WBSVersionHistory> WBSVersionHistories { get; set; }
        public virtual DbSet<WeekDayName> WeekDayNames { get; set; }
        public virtual DbSet<weeklyholiday> weeklyholidays { get; set; }
        public virtual DbSet<WeeklyHolidayType> WeeklyHolidayTypes { get; set; }
        public virtual DbSet<workevent> workevents { get; set; }
        public virtual DbSet<WorkItemMaster> WorkItemMasters { get; set; }
        public virtual DbSet<WorkWeekType> WorkWeekTypes { get; set; }
        public virtual DbSet<yearlyholiday> yearlyholidays { get; set; }
        public virtual DbSet<C_employees_O2H_20171106> C_employees_O2H_20171106 { get; set; }
        public virtual DbSet<EmployeeInOutTemp_backupBeforeMigration> EmployeeInOutTemp_backupBeforeMigration { get; set; }
        public virtual DbSet<EmployeeLeaveMaster_LOG> EmployeeLeaveMaster_LOG { get; set; }
        public virtual DbSet<Missmatch> Missmatches { get; set; }
        public virtual DbSet<tempRep> tempReps { get; set; }
        public virtual DbSet<WBS_Test> WBS_Test { get; set; }
        public virtual DbSet<WeekofDay> WeekofDays { get; set; }
        public virtual DbSet<VW_TrainerDetail> VW_TrainerDetail { get; set; }
        public virtual DbSet<VW_TrainingEmployeeLogDetail> VW_TrainingEmployeeLogDetail { get; set; }
        public virtual DbSet<VWR_PINData> VWR_PINData { get; set; }
    
        [DbFunction("HRInnova_QAEntities", "Fun_GetChieldEmployee")]
        public virtual IQueryable<Fun_GetChieldEmployee_Result> Fun_GetChieldEmployee(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Fun_GetChieldEmployee_Result>("[HRInnova_QAEntities].[Fun_GetChieldEmployee](@UserId)", userIdParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Fun_getmonthsbetweendates")]
        public virtual IQueryable<Fun_getmonthsbetweendates_Result> Fun_getmonthsbetweendates(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Fun_getmonthsbetweendates_Result>("[HRInnova_QAEntities].[Fun_getmonthsbetweendates](@FromDate, @ToDate)", fromDateParameter, toDateParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "fun_Split")]
        public virtual IQueryable<fun_Split_Result> fun_Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fun_Split_Result>("[HRInnova_QAEntities].[fun_Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "fun_Split_NEW")]
        public virtual IQueryable<fun_Split_NEW_Result> fun_Split_NEW(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fun_Split_NEW_Result>("[HRInnova_QAEntities].[fun_Split_NEW](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "funGetEmployeeHierarchy")]
        public virtual IQueryable<funGetEmployeeHierarchy_Result> funGetEmployeeHierarchy(Nullable<int> employeeID, Nullable<int> leval)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var levalParameter = leval.HasValue ?
                new ObjectParameter("Leval", leval) :
                new ObjectParameter("Leval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<funGetEmployeeHierarchy_Result>("[HRInnova_QAEntities].[funGetEmployeeHierarchy](@EmployeeID, @Leval)", employeeIDParameter, levalParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "GetAppraisalParameterByParentId")]
        public virtual IQueryable<GetAppraisalParameterByParentId_Result> GetAppraisalParameterByParentId(Nullable<int> tmpAppraisalParentID)
        {
            var tmpAppraisalParentIDParameter = tmpAppraisalParentID.HasValue ?
                new ObjectParameter("tmpAppraisalParentID", tmpAppraisalParentID) :
                new ObjectParameter("tmpAppraisalParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetAppraisalParameterByParentId_Result>("[HRInnova_QAEntities].[GetAppraisalParameterByParentId](@tmpAppraisalParentID)", tmpAppraisalParentIDParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string rowData, string delimeter)
        {
            var rowDataParameter = rowData != null ?
                new ObjectParameter("RowData", rowData) :
                new ObjectParameter("RowData", typeof(string));
    
            var delimeterParameter = delimeter != null ?
                new ObjectParameter("Delimeter", delimeter) :
                new ObjectParameter("Delimeter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[HRInnova_QAEntities].[Split](@RowData, @Delimeter)", rowDataParameter, delimeterParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[HRInnova_QAEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "tmpEmp")]
        public virtual IQueryable<tmpEmp_Result> tmpEmp(string listGDegree)
        {
            var listGDegreeParameter = listGDegree != null ?
                new ObjectParameter("ListGDegree", listGDegree) :
                new ObjectParameter("ListGDegree", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tmpEmp_Result>("[HRInnova_QAEntities].[tmpEmp](@ListGDegree)", listGDegreeParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Udf_Get_Year_Month_Day_Age")]
        public virtual IQueryable<Udf_Get_Year_Month_Day_Age_Result> Udf_Get_Year_Month_Day_Age(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Udf_Get_Year_Month_Day_Age_Result>("[HRInnova_QAEntities].[Udf_Get_Year_Month_Day_Age](@Date)", dateParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Udf_GetAllChildCompany")]
        public virtual IQueryable<Udf_GetAllChildCompany_Result> Udf_GetAllChildCompany(Nullable<int> parentCompanyId)
        {
            var parentCompanyIdParameter = parentCompanyId.HasValue ?
                new ObjectParameter("ParentCompanyId", parentCompanyId) :
                new ObjectParameter("ParentCompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Udf_GetAllChildCompany_Result>("[HRInnova_QAEntities].[Udf_GetAllChildCompany](@ParentCompanyId)", parentCompanyIdParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Udf_GetAllChildModule")]
        public virtual IQueryable<Udf_GetAllChildModule_Result> Udf_GetAllChildModule(Nullable<int> parentModuleId)
        {
            var parentModuleIdParameter = parentModuleId.HasValue ?
                new ObjectParameter("ParentModuleId", parentModuleId) :
                new ObjectParameter("ParentModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Udf_GetAllChildModule_Result>("[HRInnova_QAEntities].[Udf_GetAllChildModule](@ParentModuleId)", parentModuleIdParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Udf_GetAllSubsequentChildLinkId")]
        public virtual IQueryable<Udf_GetAllSubsequentChildLinkId_Result> Udf_GetAllSubsequentChildLinkId(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Udf_GetAllSubsequentChildLinkId_Result>("[HRInnova_QAEntities].[Udf_GetAllSubsequentChildLinkId](@ParentId)", parentIdParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Udf_GetAllSubsequentChildTechnologyId")]
        public virtual IQueryable<Udf_GetAllSubsequentChildTechnologyId_Result> Udf_GetAllSubsequentChildTechnologyId(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Udf_GetAllSubsequentChildTechnologyId_Result>("[HRInnova_QAEntities].[Udf_GetAllSubsequentChildTechnologyId](@ParentId)", parentIdParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Udf_GetAllSubsequentChildWBSId")]
        public virtual IQueryable<Udf_GetAllSubsequentChildWBSId_Result> Udf_GetAllSubsequentChildWBSId(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Udf_GetAllSubsequentChildWBSId_Result>("[HRInnova_QAEntities].[Udf_GetAllSubsequentChildWBSId](@ParentId)", parentIdParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Udf_GetAllSubsequentChildWBSIdForDataEntry")]
        public virtual IQueryable<Udf_GetAllSubsequentChildWBSIdForDataEntry_Result> Udf_GetAllSubsequentChildWBSIdForDataEntry(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Udf_GetAllSubsequentChildWBSIdForDataEntry_Result>("[HRInnova_QAEntities].[Udf_GetAllSubsequentChildWBSIdForDataEntry](@ParentId)", parentIdParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Udf_GetCurrency")]
        public virtual IQueryable<Udf_GetCurrency_Result> Udf_GetCurrency(Nullable<int> countryId)
        {
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Udf_GetCurrency_Result>("[HRInnova_QAEntities].[Udf_GetCurrency](@CountryId)", countryIdParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "udf_GetLookedByEmpIdList")]
        public virtual IQueryable<udf_GetLookedByEmpIdList_Result> udf_GetLookedByEmpIdList(string empIdStr)
        {
            var empIdStrParameter = empIdStr != null ?
                new ObjectParameter("EmpIdStr", empIdStr) :
                new ObjectParameter("EmpIdStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_GetLookedByEmpIdList_Result>("[HRInnova_QAEntities].[udf_GetLookedByEmpIdList](@EmpIdStr)", empIdStrParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "udf_GetLookedByEmpName")]
        public virtual IQueryable<udf_GetLookedByEmpName_Result> udf_GetLookedByEmpName(string lookedByEmpID)
        {
            var lookedByEmpIDParameter = lookedByEmpID != null ?
                new ObjectParameter("lookedByEmpID", lookedByEmpID) :
                new ObjectParameter("lookedByEmpID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_GetLookedByEmpName_Result>("[HRInnova_QAEntities].[udf_GetLookedByEmpName](@lookedByEmpID)", lookedByEmpIDParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Udf_GetTechNamebyProjLookupID")]
        public virtual IQueryable<Udf_GetTechNamebyProjLookupID_Result> Udf_GetTechNamebyProjLookupID(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Udf_GetTechNamebyProjLookupID_Result>("[HRInnova_QAEntities].[Udf_GetTechNamebyProjLookupID](@ProjectID)", projectIDParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "Udf_GetWeekOffDays")]
        public virtual IQueryable<Udf_GetWeekOffDays_Result> Udf_GetWeekOffDays(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Udf_GetWeekOffDays_Result>("[HRInnova_QAEntities].[Udf_GetWeekOffDays](@FromDate, @ToDate)", fromDateParameter, toDateParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "ufn_splitString_XML")]
        public virtual IQueryable<ufn_splitString_XML_Result> ufn_splitString_XML(string var, string delimiter)
        {
            var varParameter = var != null ?
                new ObjectParameter("var", var) :
                new ObjectParameter("var", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_splitString_XML_Result>("[HRInnova_QAEntities].[ufn_splitString_XML](@var, @delimiter)", varParameter, delimiterParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "ufnGeDatesBetweenTwoDates")]
        public virtual IQueryable<ufnGeDatesBetweenTwoDates_Result> ufnGeDatesBetweenTwoDates(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufnGeDatesBetweenTwoDates_Result>("[HRInnova_QAEntities].[ufnGeDatesBetweenTwoDates](@FromDate, @ToDate)", fromDateParameter, toDateParameter);
        }
    
        [DbFunction("HRInnova_QAEntities", "ufnGetAvgHourDetails")]
        public virtual IQueryable<ufnGetAvgHourDetails_Result> ufnGetAvgHourDetails(Nullable<int> employeeId, Nullable<int> month, Nullable<int> year, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufnGetAvgHourDetails_Result>("[HRInnova_QAEntities].[ufnGetAvgHourDetails](@EmployeeId, @Month, @Year, @FromDate, @ToDate)", employeeIdParameter, monthParameter, yearParameter, fromDateParameter, toDateParameter);
        }
    }
}
